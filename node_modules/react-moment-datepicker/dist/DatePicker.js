"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _reactMomentProptypes = require('react-moment-proptypes');

var _reactMomentProptypes2 = _interopRequireDefault(_reactMomentProptypes);

require('moment-timezone');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _reactPopover = require('react-popover');

var _reactPopover2 = _interopRequireDefault(_reactPopover);

var _Calendar = require('./Calendar.js');

var _Calendar2 = _interopRequireDefault(_Calendar);

require('./DatePicker.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DatePicker = function (_React$Component) {
    _inherits(DatePicker, _React$Component);

    function DatePicker() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, DatePicker);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
            isOpen: false
        }, _this.show = function () {
            return _this.setState({ isOpen: true });
        }, _this.hide = function () {
            return _this.setState({ isOpen: false });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(DatePicker, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props;
            var inline = _props.inline;
            var date = _props.date;
            var _onSelect = _props.onSelect;
            var defaultDate = _props.defaultDate;
            var DayComponent = _props.DayComponent;
            var headerFormat = _props.headerFormat;
            var footerFormat = _props.footerFormat;
            var children = _props.children;
            var timezone = _props.timezone;
            var popoverProps = _props.popoverProps;
            var dayProps = _props.dayProps;
            var classNameModifier = _props.classNameModifier;

            var _ref2 = popoverProps || {};

            var _ref2$preferPlace = _ref2.preferPlace;
            var preferPlace = _ref2$preferPlace === undefined ? 'below' : _ref2$preferPlace;

            var otherPopoverProps = _objectWithoutProperties(_ref2, ['preferPlace']);

            var isOpen = this.state.isOpen;


            var classes = (0, _classnames2.default)('rm_datepicker', classNameModifier && 'rm_datepicker--' + classNameModifier, inline || 'rm_datepicker--popover');

            var datepicker = _react2.default.createElement(
                'div',
                { className: classes },
                _react2.default.createElement(_Calendar2.default, {
                    ref: 'calendar',
                    defaultDate: defaultDate,
                    date: date,
                    DayComponent: DayComponent,
                    onSelect: function onSelect(selectedDate) {
                        _onSelect(selectedDate);
                        _this2.refs.calendar.resetStartFromDate(selectedDate);
                    },
                    headerFormat: headerFormat,
                    footerFormat: footerFormat,
                    timezone: timezone,
                    dayProps: dayProps
                })
            );

            return _react2.default.createElement(
                'div',
                null,
                inline ? datepicker : _react2.default.createElement(
                    _reactPopover2.default,
                    _extends({
                        isOpen: isOpen,
                        body: datepicker,
                        onOuterAction: this.hide,
                        preferPlace: preferPlace
                    }, otherPopoverProps, {
                        refreshIntervalMs: 0
                    }),
                    children ? _react2.default.createElement(
                        'span',
                        {
                            onClick: this.show },
                        children
                    ) : _react2.default.createElement('input', {
                        onFocus: this.show,
                        onClick: this.show,
                        value: date && date.format('YYYY-MM-DD'),
                        onChange: function onChange(_ref3) {
                            var value = _ref3.target.value;

                            var selectedDate = _moment2.default.tz(value, timezone);
                            _onSelect(selectedDate);
                            _this2.refs.calendar.resetStartFromDate(selectedDate);
                        },
                        type: 'date'
                    })
                )
            );
        }
    }]);

    return DatePicker;
}(_react2.default.Component);

DatePicker.propTypes = {
    inline: _react2.default.PropTypes.bool,
    date: _reactMomentProptypes2.default.momentObj,
    onSelect: _react2.default.PropTypes.func,
    defaultDate: _reactMomentProptypes2.default.momentObj,
    DayComponent: _react2.default.PropTypes.func,
    headerFormat: _react2.default.PropTypes.string,
    footerFormat: _react2.default.PropTypes.string,
    timezone: _react2.default.PropTypes.string,
    popoverProps: _react2.default.PropTypes.object,
    dayProps: _react2.default.PropTypes.oneOf([_react2.default.PropTypes.object, _react2.default.PropTypes.func]),
    classNameModifier: _react2.default.PropTypes.string
};
exports.default = DatePicker;
module.exports = exports['default'];